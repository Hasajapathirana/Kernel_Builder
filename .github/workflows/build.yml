name: Build Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl aria2 zstd xz-utils bc bison ccache flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev

      - name: Download Kernel
        run: |
          curl -LSs https://download1640.mediafire.com/5qmcbpe17sogLD03HmBd5vrz_82CKkO5kcYjcA_dEvgtkpv5D2gNCLx9wxRqqaLbcX95sEg9syxVKaH-OoXPb8RzoMw27-A_75rmSEXmEDq2NHGX9GCzox6JnDWpkZzbx5URzTxWe0KwdE3ZutHQcfVRjK-ONQ8F_6DMPuTC9qUdhAo/kbsleulzl116cil/Kernel.tar.gz -o kernel.tar.gz
          ls 
          ls -l
          
      - name: Extract Kernel
        run: |
          mkdir kernel  # Create a new directory called "kernel"
          tar -zxf kernel.tar.gz -C kernel/  

      - name: Build Kernel
        run: |
          cd /home/runner/work/Kernel_Builder/Kernel_Builder/kernel/
          export PLATFORM_VERSION=11
          export ANDROID_MAJOR_VERSION=r
          export ARCH=arm64
          make exynos2100-p3sxxx_defconfig
          make -j2

      - name: Compress build folder
        run: |
          tar -czf /home/runner/work/Kernel_Builder/Kernel_Builder/kernel/build_folder.tar.gz /home/runner/work/Kernel_Builder/Kernel_Builder/kernel/

      - name: Upload build folder
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: /home/runner/work/Kernel_Builder/Kernel_Builder/kernel/build_folder.tar.gz
